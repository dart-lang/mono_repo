# Created with package:mono_repo v5.0.0-dev
name: Dart CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: "smoke_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - "2.10.4"
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "test_pkg; dart analyze --fatal-infos ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: dart analyze --fatal-infos .
  job_002:
    name: "smoke_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - "2.12.0-259.0.dev"
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "test_pkg; dart analyze --fatal-infos ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: dart analyze --fatal-infos .
  job_003:
    name: "smoke_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - "2.12.0-29.10.beta"
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "test_pkg; dart analyze --fatal-infos ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: dart analyze --fatal-infos .
  job_004:
    name: "smoke_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - "2.12.0"
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:dartanalyzer_1"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: mono_repo; dart analyze
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: dart analyze
  job_005:
    name: "smoke_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - beta
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "test_pkg; dart analyze --fatal-infos ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: dart analyze --fatal-infos .
  job_006:
    name: "smoke_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - dev
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:command"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; cd ../ && dart mono_repo/bin/mono_repo.dart generate --validate"
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "cd ../ && dart mono_repo/bin/mono_repo.dart generate --validate"
  job_007:
    name: "smoke_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - dev
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "mono_repo; dart analyze --fatal-infos ."
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: dart analyze --fatal-infos .
  job_008:
    name: "smoke_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - dev
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "test_pkg; dart analyze --fatal-infos ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: dart analyze --fatal-infos .
  job_009:
    name: "smoke_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - main
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "test_pkg; dart analyze --fatal-infos ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: dart analyze --fatal-infos .
  job_010:
    name: "smoke_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - stable
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "test_pkg; dart analyze --fatal-infos ."
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: dart analyze --fatal-infos .
  job_011:
    name: "unit_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - "2.12.0"
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:test_1"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; dart test -t yaml --test-randomize-ordering-seed=random"
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "dart test -t yaml --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
  job_012:
    name: "unit_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - "2.12.0"
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:test_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
  job_013:
    name: "unit_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - dev
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:test_1"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; dart test -t yaml --test-randomize-ordering-seed=random"
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "dart test -t yaml --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
  job_014:
    name: "unit_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - dev
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:test_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
  job_015:
    name: "unit_test; PKG: test_pkg"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        sdk:
          - dev
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg;commands:test_2"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:test_pkg
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: test_pkg_pub_upgrade
        name: test_pkg; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: test_pkg
        run: dart pub upgrade
      - name: "test_pkg; dart test --test-randomize-ordering-seed=random"
        if: "always() && steps.test_pkg_pub_upgrade.conclusion == 'success'"
        working-directory: test_pkg
        run: "dart test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
  job_016:
    name: "unit_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - windows-latest
        sdk:
          - "2.12.0"
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:test_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
  job_017:
    name: "unit_test; PKG: mono_repo"
    strategy:
      matrix:
        os:
          - windows-latest
        sdk:
          - dev
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Cache Pub hosted dependencies
        if: "${{ runner.os == 'Linux' || runner.os == 'macOS' }}"
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo;commands:test_0"
          restore-keys: |
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }};packages:mono_repo
            os:${{ matrix.os }};pub-cache-hosted;dart:${{ matrix.sdk }}
            os:${{ matrix.os }};pub-cache-hosted
            os:${{ matrix.os }}
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "${{ matrix.sdk }}"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: mono_repo_pub_upgrade
        name: mono_repo; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: mono_repo
        run: dart pub upgrade
      - name: "mono_repo; dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        if: "always() && steps.mono_repo_pub_upgrade.conclusion == 'success'"
        working-directory: mono_repo
        run: "dart test -x yaml -P presubmit --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
  job_018:
    name: Notify failure
    runs-on: ubuntu-latest
    if: "(github.event_name == 'push' || github.event_name == 'schedule') && failure()"
    steps:
      - run: |
          curl -H "Content-Type: application/json" -X POST -d \
            "{'text':'Build failed! ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}'}" \
            "${CHAT_WEBHOOK_URL}"
        env:
          CHAT_WEBHOOK_URL: "${{ secrets.CHAT_WEBHOOK_URL }}"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
      - job_011
      - job_012
      - job_013
      - job_014
      - job_015
      - job_016
      - job_017
