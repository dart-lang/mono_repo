# Created with package:mono_repo v3.3.1-dev
name: Dart CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: "smoke_test; linux; Dart dev; PKG: mono_repo; `cd ../ && dart mono_repo/bin/mono_repo.dart generate --validate`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo;commands:command"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: dev
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub upgrade --no-precompile"
        run: "cd mono_repo && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; cd ../ && dart mono_repo/bin/mono_repo.dart generate --validate"
        env:
          PKGS: mono_repo
        run: tool/ci.sh command
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
  job_002:
    name: "smoke_test; linux; Dart dev; PKGS: mono_repo, test_pkg; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo-test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo-test_pkg
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: dev
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub upgrade --no-precompile"
        run: "cd mono_repo && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; dartfmt -n --set-exit-if-changed ."
        env:
          PKGS: mono_repo
        run: tool/ci.sh dartfmt
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
      - name: "mono_repo; dartanalyzer --fatal-infos ."
        env:
          PKGS: mono_repo
        run: tool/ci.sh dartanalyzer_0
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
      - id: test_pkg_pub_upgrade
        name: "test_pkg; pub upgrade --no-precompile"
        run: "cd test_pkg && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "test_pkg; dartfmt -n --set-exit-if-changed ."
        env:
          PKGS: test_pkg
        run: tool/ci.sh dartfmt
        if: "steps.test_pkg_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
      - name: "test_pkg; dartanalyzer --fatal-infos ."
        env:
          PKGS: test_pkg
        run: tool/ci.sh dartanalyzer_0
        if: "steps.test_pkg_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
  job_003:
    name: "smoke_test; linux; Dart 2.7.0; PKG: mono_repo; `dartanalyzer .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.7.0;packages:mono_repo;commands:dartanalyzer_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.7.0;packages:mono_repo
            os:ubuntu-latest;pub-cache-hosted;dart:2.7.0
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: stable
          version: "2.7.0"
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub upgrade --no-precompile"
        run: "cd mono_repo && pub upgrade --no-precompile"
        continue-on-error: true
      - name: mono_repo; dartanalyzer .
        env:
          PKGS: mono_repo
        run: tool/ci.sh dartanalyzer_1
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
  job_004:
    name: "smoke_test; linux; Dart beta; PKG: test_pkg; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:beta;packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:beta;packages:test_pkg
            os:ubuntu-latest;pub-cache-hosted;dart:beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
      - run: dart --version
      - uses: actions/checkout@v2
      - env:
          PKGS: test_pkg
        run: tool/ci.sh dartfmt dartanalyzer_0
  job_005:
    name: "smoke_test; linux; Dart stable; PKG: test_pkg; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:stable;packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:stable;packages:test_pkg
            os:ubuntu-latest;pub-cache-hosted;dart:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: stable
      - run: dart --version
      - uses: actions/checkout@v2
      - env:
          PKGS: test_pkg
        run: tool/ci.sh dartfmt dartanalyzer_0
  job_006:
    name: "smoke_test; linux; Dart 2.12.0-0.0.dev; PKG: test_pkg; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.12.0-0.0.dev;packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.12.0-0.0.dev;packages:test_pkg
            os:ubuntu-latest;pub-cache-hosted;dart:2.12.0-0.0.dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: dev
          version: "2.12.0-0.0.dev"
      - run: dart --version
      - uses: actions/checkout@v2
      - env:
          PKGS: test_pkg
        run: tool/ci.sh dartfmt dartanalyzer_0
  job_007:
    name: "smoke_test; linux; Dart 2.12.0-29.10.beta; PKG: test_pkg; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.12.0-29.10.beta;packages:test_pkg;commands:dartfmt-dartanalyzer_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.12.0-29.10.beta;packages:test_pkg
            os:ubuntu-latest;pub-cache-hosted;dart:2.12.0-29.10.beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: "2.12.0-29.10.beta"
      - run: dart --version
      - uses: actions/checkout@v2
      - env:
          PKGS: test_pkg
        run: tool/ci.sh dartfmt dartanalyzer_0
  job_008:
    name: "unit_test; linux; Dart 2.7.0; PKG: mono_repo; `pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.7.0;packages:mono_repo;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.7.0;packages:mono_repo
            os:ubuntu-latest;pub-cache-hosted;dart:2.7.0
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: stable
          version: "2.7.0"
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub upgrade --no-precompile"
        run: "cd mono_repo && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        env:
          PKGS: mono_repo
        run: tool/ci.sh test_0
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
  job_009:
    name: "unit_test; windows; Dart 2.7.0; PKG: mono_repo; `pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random`"
    runs-on: windows-latest
    steps:
      - uses: cedx/setup-dart@v2
        with:
          release-channel: stable
          version: "2.7.0"
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub.bat upgrade --no-precompile"
        run: "cd mono_repo && pub.bat upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        env:
          PKGS: mono_repo
        run: tool/ci.sh test_0
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
  job_010:
    name: "unit_test; linux; Dart dev; PKG: mono_repo; `pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: dev
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub upgrade --no-precompile"
        run: "cd mono_repo && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        env:
          PKGS: mono_repo
        run: tool/ci.sh test_0
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
  job_011:
    name: "unit_test; windows; Dart dev; PKG: mono_repo; `pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random`"
    runs-on: windows-latest
    steps:
      - uses: cedx/setup-dart@v2
        with:
          release-channel: dev
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub.bat upgrade --no-precompile"
        run: "cd mono_repo && pub.bat upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; pub run test -x yaml -P presubmit --test-randomize-ordering-seed=random"
        env:
          PKGS: mono_repo
        run: tool/ci.sh test_0
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
  job_012:
    name: "unit_test; linux; Dart 2.7.0; PKG: mono_repo; `pub run test -t yaml --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.7.0;packages:mono_repo;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.7.0;packages:mono_repo
            os:ubuntu-latest;pub-cache-hosted;dart:2.7.0
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: stable
          version: "2.7.0"
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub upgrade --no-precompile"
        run: "cd mono_repo && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; pub run test -t yaml --test-randomize-ordering-seed=random"
        env:
          PKGS: mono_repo
        run: tool/ci.sh test_1
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
  job_013:
    name: "unit_test; linux; Dart dev; PKG: mono_repo; `pub run test -t yaml --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:mono_repo
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: dev
      - run: dart --version
      - uses: actions/checkout@v2
      - id: mono_repo_pub_upgrade
        name: "mono_repo; pub upgrade --no-precompile"
        run: "cd mono_repo && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "mono_repo; pub run test -t yaml --test-randomize-ordering-seed=random"
        env:
          PKGS: mono_repo
        run: tool/ci.sh test_1
        if: "steps.mono_repo_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
  job_014:
    name: "unit_test; linux; Dart dev; PKG: test_pkg; `pub run test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:test_pkg;commands:test_2"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:test_pkg
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: cedx/setup-dart@v2
        with:
          release-channel: dev
      - run: dart --version
      - uses: actions/checkout@v2
      - id: test_pkg_pub_upgrade
        name: "test_pkg; pub upgrade --no-precompile"
        run: "cd test_pkg && pub upgrade --no-precompile"
        continue-on-error: true
      - name: "test_pkg; pub run test --test-randomize-ordering-seed=random"
        env:
          PKGS: test_pkg
        run: tool/ci.sh test_2
        if: "steps.test_pkg_pub_upgrade.conclusion == 'success'"
        continue-on-error: true
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
  job_015:
    name: Notify failure
    runs-on: ubuntu-latest
    if: "(github.event_name == 'push' || github.event_name == 'schedule') && failure()"
    steps:
      - run: |
          curl -H "Content-Type: application/json" -X POST -d \
            "{'text':'Build failed! ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}'}" \
            "${CHAT_WEBHOOK_URL}"
        env:
          CHAT_WEBHOOK_URL: "${{ secrets.CHAT_WEBHOOK_URL }}"
    needs:
      - job_008
      - job_009
      - job_010
      - job_011
      - job_012
      - job_013
      - job_014
